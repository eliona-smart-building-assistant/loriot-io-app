/*
 * Loriot.io app API
 *
 * API to access and configure the Loriot.io app
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apiservices

import (
	"context"
	"loriot-io/apiserver"
	"loriot-io/app"
	"loriot-io/broker"
	"net/http"
)

// DevicesAPIService is a service that implements the logic for the DevicesAPIServicer
// This service should implement the business logic for every endpoint for the DevicesAPI API.
// Include any external packages or services that will be required by this service.
type DevicesAPIService struct {
}

// NewDevicesAPIService creates a default api service
func NewDevicesAPIService() apiserver.DevicesAPIServicer {
	return &DevicesAPIService{}
}

// GetDevices - Get LoRaWAN devices
func (s *DevicesAPIService) GetDevices(ctx context.Context) (apiserver.ImplResponse, error) {
	devices, err := conf.GetDeviceAssets(ctx)
	if err != nil {
		return apiserver.ImplResponse{}, err
	}
	return apiserver.Response(http.StatusOK, devices), err
}

// PutDevice - Create or update a LoRaWAN device
func (s *DevicesAPIService) PutDevice(ctx context.Context, putDeviceRequest apiserver.PutDeviceRequest) (apiserver.ImplResponse, error) {
	deviceAssets, err := broker.UpsertDevice(ctx, putDeviceRequest)
	if deviceAssets == nil {
		return apiserver.Response(http.StatusBadRequest, nil), err
	}
	if err != nil {
		return apiserver.Response(http.StatusInternalServerError, deviceAssets), err
	}
	return apiserver.Response(http.StatusOK, deviceAssets), err
}
